[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "trodes_to_nwb"
description = "A python package to convert SpikeGadgets data to NWB"
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
authors = [
    { name = "Sam Bray", email = "sam.bray@ucsf.edu" },
    { name = "Eric Denovellis", email = "eric.denovellis@ucsf.edu" },
    { name = "Ryan Ly", email = "rly@lbl.gov" },
    { name = "Philip Adenekan", email = "phil.adenekan@ucsf.edu" },
    { name = "Loren Frank", email = "loren.frank@ucsf.edu" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy",
    "scipy",
    "pandas",
    "pynwb<=3.0.0",
    "nwbinspector>=0.5.0",
    "ndx_franklab_novela",
    "pyyaml",
    "neo>=0.13.4",
    "dask[complete]",
    "ffmpeg",
    "jsonschema<4.21.0",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/LorenFrankLab/trodes_to_nwb"
"Bug Tracker" = "https://github.com/LorenFrankLab/trodes_to_nwb/issues"

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "pytest-mock"]
dev = ["black", "pytest", "pytest-cov", "pytest-mock", "mypy", "ruff"]
lint = ["black", "ruff", "mypy"]
docs = ["sphinx", "sphinx-rtd-theme", "myst-parser"]

[tool.hatch.version]
source = "vcs"
fallback_version = "0.1.0.dev0"

[tool.hatch.build.hooks.vcs]
version-file = "src/trodes_to_nwb/_version.py"

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]

[tool.hatch.build.targets.wheel]
packages = ["src/trodes_to_nwb"]
exclude = ["src/trodes_to_nwb/data/test_data"]

[tool.coverage.run]
source = ["src/trodes_to_nwb"]
omit = ["src/trodes_to_nwb/tests/*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["src/trodes_to_nwb/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --verbose --cov=src/trodes_to_nwb --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = false  # Set to true gradually
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unreachable = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "neo.*",
    "pynwb.*",
    "nwbinspector.*",
    "ndx_franklab_novela.*",
    "dask.*",
    "scipy.*",
    "pandas.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
    "UP", # pyupgrade
    "C4", # flake8-comprehensions
    "SIM", # flake8-simplify
    "PL", # pylint
]
ignore = [
    "E501",  # line too long, handled by black
    "PLR0913", # too many arguments to function call
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLW2901", # redefined loop variable
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["PLR2004"]  # magic value used in comparison
"src/trodes_to_nwb/tests/**/*.py" = ["PLR2004"]

[tool.ruff.isort]
known-first-party = ["trodes_to_nwb"]
force-sort-within-sections = true
